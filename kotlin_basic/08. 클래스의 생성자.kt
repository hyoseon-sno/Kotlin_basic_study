// 클래스의 생성자

/* 클래스의 생성자란
* 생성자 : 새로운 인스턴스를 만들기 위해 호출하는 특수 함수 (클래스를 만들때 기본으로 선언)
* - 생성자를 호출하면 클래스의 인스턴스를 만들어 반환 받을 수 있음
* - 기능1) 인스턴스의 속성을 초기화
* - 기능2) 인스턴스 생성시 구문을 수행
*
* - init 함수 : 파라미터나 반환형이 없는 특수 함수
*  -> 생성자를 통해 인스턴스가 만들어질 때 호출되는 함수
* */

/* 보조 생성자
* 보조 생성자 : 기본 생성자와 다른 형태의 생성자를 제공하여 인스턴스 생성시 편의를 제공하거나 추가적인 구문을 수행하는 기능을 제공하는 역할 (필요에 따라 추가적으로 선언)
* -> constructor() 키워드 사용
*
* 기능1) 인스턴스 생성시 편의를 제공
* 기능2) 추가적인 구문을 수행하는 기능 제공
* */


fun main(){
    var a = Person("A",1990)
    var b = Person("B",1998)
    var c = Person("C",2000)

    var d = Person("D")
    var e = Person("E")
    var f = Person("F")

}

class Person (var name:String, val brithYear:Int) {
    init {
        println ("${this.brithYear}년생 ${this.name}님이 생성되었습니다.") // this : 인스턴스 자신의 속성이나 함수를 호출하기 위해 클래스 내부에서 사용되는 키워드

    }

    constructor(name:String) : this(name, 1998) { // 보조생성자 - 보조 생성자 만들때는 반드시 기본 생정자를 통해 속성 초기화 필수
        println("보조 생성자 사용됨")
    }
}